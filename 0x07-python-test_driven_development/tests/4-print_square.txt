    This is the documentation
    for the module: 4-print_square
=======================================

This module contains function that deals with geometry.

Functions:
    prints a Square object with '#' characters on a given position by
    it's attribute.
    Args:
        size (int): The size of the square to print.

    Return:
        for test purposes there is a return statment that return the
        square that is going to be print if you wnat it for any reason
        you can uncomment it but by default it does not return anything.

    # importing and adding paths where local modules belong.
    >>> import os, sys
    >>> sys.path.insert(0, os.getcwd() + '/../')
    >>> print_square = __import__('4-print_square').print_square

    # test with input 0
    >>> testSize = 0
    >>> print_square(testSize)

    # test with input 1
    >>> testSize = 1
    >>> print_square(testSize)
    #

    # test with positive integer
    >>> testSize = 4
    >>> print_square(testSize)
    ####
    ####
    ####
    ####

    # test with positive float
    >>> testSize = 3.4
    >>> print_square(testSize)
    ###
    ###
    ###

    # test with negative int
    # expected to raise TypeError.
    >>> testObject = -1
    >>> print_square(testObject) # doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    ValueError: size must be >= 0
    >>> testObject = -1.3
    >>> print_square(testObject) # doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: size must be an integer

    # test with non number object.
    >>> testObject = "string"
    >>> print_square(testObject) # doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: size must be an integer
